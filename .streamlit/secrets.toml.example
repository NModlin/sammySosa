# Apollo GovCon Suite - Secrets Configuration Template
# 
# SECURITY WARNING: This is a template file. DO NOT commit actual secrets to version control.
# 
# Instructions:
# 1. Copy this file to .streamlit/secrets.toml
# 2. Replace all placeholder values with your actual credentials
# 3. Ensure .streamlit/secrets.toml is in your .gitignore file
# 4. Never commit the actual secrets.toml file to version control

# Database Configuration
[database]
host = "localhost"                    # Database host (e.g., "localhost" or "your-db-host.com")
port = "5434"                        # Database port (default PostgreSQL: 5432, Docker mapped: 5434)
database = "sam_contracts"           # Database name
username = "postgres"                # Database username
password = "REPLACE_WITH_SECURE_PASSWORD"  # Database password - USE STRONG PASSWORD

# API Keys - Government Services
SAM_API_KEY = "REPLACE_WITH_YOUR_SAM_GOV_API_KEY"           # Get from https://sam.gov/data-services
GRANTS_GOV_API_KEY = "REPLACE_WITH_YOUR_GRANTS_GOV_API_KEY" # Get from https://www.grants.gov/

# Notification Services
SLACK_WEBHOOK_URL = "REPLACE_WITH_YOUR_SLACK_WEBHOOK_URL"   # Get from Slack App settings

# Optional Configuration
API_KEY_EXPIRATION_DATE = "2025-12-21"                     # SAM.gov API key expiration date
GOVCON_MODEL_PATH = "mistral-7b-instruct-v0.1.Q4_K_M.gguf" # AI model file path

# Email Configuration (Phase 3 & 4 Features)
SENDGRID_API_KEY = "REPLACE_WITH_YOUR_SENDGRID_API_KEY"     # Get from SendGrid dashboard
SENDGRID_FROM_EMAIL = "your_email@company.com"             # Your verified sender email
SENDGRID_FROM_NAME = "GovCon Suite"                        # Display name for emails

# Application URLs (Update for your deployment)
BASE_URL = "http://localhost:8502"                         # Base application URL
PARTNER_PORTAL_URL = "http://localhost:8502/partner_portal" # Partner portal URL

# Company Information (Used in generated documents)
COMPANY_NAME = "Your Company Name"                         # Your company's legal name
COMPANY_ADDRESS = "Your Company Address"                   # Your company's address
COMPANY_PHONE = "Your Company Phone"                       # Your company's phone number
COMPANY_EMAIL = "your_email@company.com"                   # Your company's contact email

# MCP (Model Context Protocol) Configuration
MCP_SERVER_ENDPOINT = "http://localhost:8000/api/v1/mcp/"  # MCP server endpoint
MCP_API_KEY = "REPLACE_WITH_YOUR_MCP_API_KEY"              # MCP authentication key
MCP_CLIENT_ID = "sammySosa"                                # Client identifier
MCP_TIMEOUT = 30                                           # Request timeout in seconds
MCP_MAX_RETRIES = 3                                        # Maximum retry attempts

# Security Configuration (Production)
# Uncomment and configure for production deployments
# SECURITY_SECRET_KEY = "REPLACE_WITH_LONG_RANDOM_SECRET_KEY"  # Flask/Django secret key
# JWT_SECRET_KEY = "REPLACE_WITH_JWT_SECRET_KEY"               # JWT signing key
# ENCRYPTION_KEY = "REPLACE_WITH_ENCRYPTION_KEY"               # Data encryption key

# Database Connection Pool (Production)
# Uncomment for production database optimization
# DB_POOL_SIZE = 10                                          # Connection pool size
# DB_MAX_OVERFLOW = 20                                       # Max overflow connections
# DB_POOL_TIMEOUT = 30                                       # Pool timeout in seconds

# Logging Configuration (Production)
# LOG_LEVEL = "INFO"                                         # Logging level (DEBUG, INFO, WARNING, ERROR)
# LOG_FORMAT = "json"                                        # Log format (json, text)
# AUDIT_LOG_ENABLED = true                                   # Enable audit logging

# Performance Configuration (Production)
# CACHE_TYPE = "redis"                                       # Cache backend (redis, memory)
# CACHE_REDIS_URL = "redis://localhost:6379/0"              # Redis cache URL
# SESSION_TIMEOUT = 1800                                     # Session timeout in seconds (30 minutes)

# External Service Configuration
# WEATHER_API_KEY = "REPLACE_WITH_WEATHER_API_KEY"           # Weather service API key
# MAPS_API_KEY = "REPLACE_WITH_MAPS_API_KEY"                 # Maps service API key

# Development/Testing Configuration
# Uncomment for development environments
# DEBUG_MODE = true                                          # Enable debug mode
# TESTING_MODE = false                                       # Enable testing mode
# DEMO_MODE = false                                          # Enable demo mode with sample data

# Backup Configuration (Production)
# BACKUP_ENABLED = true                                      # Enable automated backups
# BACKUP_SCHEDULE = "0 2 * * *"                             # Backup schedule (cron format)
# BACKUP_RETENTION_DAYS = 30                                 # Backup retention period

# Monitoring Configuration (Production)
# MONITORING_ENABLED = true                                  # Enable monitoring
# METRICS_ENDPOINT = "http://localhost:9090"                 # Metrics collection endpoint
# HEALTH_CHECK_INTERVAL = 60                                 # Health check interval in seconds

# Compliance Configuration (Government Deployments)
# FISMA_COMPLIANCE_MODE = true                               # Enable FISMA compliance features
# AUDIT_ALL_ACTIONS = true                                   # Audit all user actions
# DATA_CLASSIFICATION_REQUIRED = true                        # Require data classification
# CLEARANCE_LEVEL_ENFORCEMENT = true                         # Enforce security clearance levels

# ============================================================================
# SECURITY BEST PRACTICES:
# ============================================================================
# 
# 1. PASSWORD SECURITY:
#    - Use passwords with at least 16 characters
#    - Include uppercase, lowercase, numbers, and special characters
#    - Never reuse passwords across systems
#    - Consider using a password manager
# 
# 2. API KEY SECURITY:
#    - Rotate API keys regularly (every 90 days minimum)
#    - Use different API keys for different environments
#    - Monitor API key usage for anomalies
#    - Revoke unused or compromised keys immediately
# 
# 3. DATABASE SECURITY:
#    - Use strong, unique database passwords
#    - Enable database encryption at rest
#    - Use SSL/TLS for database connections
#    - Regularly update database software
# 
# 4. ENVIRONMENT SEPARATION:
#    - Use different secrets for development, staging, and production
#    - Never use production secrets in development environments
#    - Implement proper access controls for each environment
# 
# 5. SECRET MANAGEMENT:
#    - Consider using a dedicated secret management service (HashiCorp Vault, AWS Secrets Manager)
#    - Implement automatic secret rotation where possible
#    - Audit secret access regularly
#    - Use environment variables in production instead of files
# 
# ============================================================================
# COMPLIANCE NOTES:
# ============================================================================
# 
# For government contracting applications, ensure:
# - All secrets meet NIST password requirements
# - API keys are approved for government use
# - Database encryption meets FIPS 140-2 standards
# - Audit logging captures all secret access
# - Regular security assessments are conducted
# 
# ============================================================================
